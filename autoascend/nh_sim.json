{"score": [4377, 892, 1179, 2407, 4019, 3336, 3588, 4648, 7562, 4134, 3622, 1188, 7170, 8989, 151, 1293.0, 10067, 10855, 19360, 2663, 16894, 15676, 17454, 25213.0, 3411, 4530, 2403, 24082.0, 9911, 2568, 39934, 8785, 39167.0, 1100, 319, 1843, 9471, 1262, 1447, 11289, 1687, 4449, 1180, 13024, 204, 13, 299, 372, 402.0, 1068, 1803, 2707, 2560, 3274, 897, 2057, 465, 5010.0, 4488, 1978, 5532, 5643, 5322, 9527, 4921, 4828, 1099, 13083, 101, 6151, 1429, 1759, 8704, 17110, 4202, 30149.0, 2601, 706, 3879, 8890, 1097, 29473.0, 11894, 14993, 9540, 24904, 4278, 3888, 7042, 3298, 402, 17152, 9266, 1050, 999, 33581, 54675, 4448, 627, 6128, 284, 16604, 1009, 5924, 810, 24092, 1404, 22479, 22794.0, 4472, 22342, 21866, 2209, 21101, 3373, 694, 858, 1985, 4, 299, 837, 44, 2054, 1299, 22, 1757, 1911, 2443, 75, 2285, 2338, 1036, 6335, 2649, 4670, 7689, 2992, 132, 4964, 15981, 12262, 769, 420, 3002, 7782, 2849, 583, 17773, 5128, 6602, 15406, 1886, 2589, 11330, 7220, 19044, 28505, 4541, 15506, 51165, 201, 878, 1333, 1304, 1910, 1767, 120, 1973, 179, 2375, 3816, 2597, 3068, 4414, 683, 1798, 8473, 9083, 6060, 2162, 8369, 9116, 5770], "steps": [36420, 7757, 9701, 12613, 19537, 23375, 26806, 24078, 23189, 21863, 28016, 13216, 32188, 29954, 1803, 10012, 35001, 35223, 42551, 22256, 43539, 55355, 47382, 52335, 24988, 26980, 22106, 65178, 31741, 20845, 60645, 29097, 58652, 6868, 2438, 16468, 32033, 7862, 13456, 32169, 15475, 28006, 16714, 37645, 1606, 1606, 2225, 3643, 5451, 8952, 14788, 15473, 15491, 18383, 12435, 15066, 8264, 25215, 31743, 16665, 27136, 31570, 20284, 32923, 33502, 22500, 10477, 35518, 1855, 45723, 10815, 18611, 28375, 46652, 20495, 54489, 25755, 5787, 25483, 56157, 7970, 56304, 35448, 35825, 28342, 50216, 17538, 27063, 36082, 19507, 5524, 43776, 28035, 12228, 11545, 67406, 85176, 25764, 6676, 72146, 2677, 56260, 9645, 22526, 16390, 60384, 9456, 44979, 58215, 18774, 52533, 69482, 22812, 50190, 21924, 8126, 9279, 12281, 250, 2707, 6135, 341, 13174, 12703, 177, 12994, 16542, 14193, 2239, 18741, 22024, 7507, 24131, 20754, 25963, 28431, 15597, 1534, 23623, 38805, 40386, 6084, 5023, 20159, 36020, 12459, 4414, 41622, 30164, 39433, 43012, 16830, 15709, 33260, 40803, 45379, 66233, 28311, 48472, 77094, 2452, 7277, 14561, 10702, 12550, 17064, 2391, 11691, 1993, 22117, 22142, 18756, 18500, 20490, 13857, 11552, 27589, 31262, 30447, 16998, 38665, 29709, 21219], "turns": [20659, 7489, 7764, 11019, 15544, 17406, 15846, 17520, 18980, 15651, 16146, 11398, 24324, 26275, 1728, 8745, 27004, 29814, 26368, 11956, 29633, 29351, 31071, 30144, 20287, 23075, 13667, 39849, 24370, 16323, 33309, 20478, 37711, 6411, 1793, 14385, 24509, 7940, 9565, 22359, 14898, 20828, 8103, 30530, 1472, 235, 2272, 3276, 5842, 7233, 11606, 13053, 13690, 13998, 8270, 13629, 7028, 21267, 16604, 11383, 18922, 18033, 15725, 24428, 23366, 15691, 7874, 25471, 1857, 25882, 9390, 9935, 22065, 33472, 14675, 34836, 17581, 5298, 23508, 32259, 6471, 33873, 24205, 26838, 19271, 32783, 13790, 19225, 22828, 16026, 6308, 29141, 17968, 6758, 9762, 35530, 44501, 21150, 3944, 35076, 2641, 32485, 9002, 19662, 10429, 42771, 7407, 27945, 33275, 15108, 35621, 32044, 15669, 31480, 17473, 7094, 7235, 9016, 118, 3358, 5698, 190, 10385, 12394, 110, 10381, 16664, 12035, 1792, 14831, 17350, 8224, 18462, 18626, 20875, 19902, 13030, 1460, 18800, 23009, 30030, 6215, 5196, 19183, 25981, 11405, 4563, 31880, 22428, 23340, 32036, 10882, 11374, 23459, 27296, 25839, 33965, 21327, 28891, 36382, 2353, 6359, 10167, 9956, 12309, 9376, 2888, 9650, 1992, 10685, 15839, 16493, 16665, 18074, 6437, 10692, 22782, 26972, 24640, 11553, 21326, 22238, 16998], "level_num": [1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 4, 4, 1, 1, 5, 3, 8, 1, 5, 4, 7, 13, 1, 2, 1, 7, 6, 1, 11, 5, 11, 1, 1, 1, 3, 1, 1, 5, 1, 1, 1, 6, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 5, 1, 1, 1, 6, 1, 2, 1, 1, 6, 6, 3, 13, 1, 1, 1, 4, 1, 13, 6, 6, 5, 6, 1, 1, 4, 1, 1, 7, 5, 1, 1, 12, 13, 1, 1, 2, 1, 3, 1, 3, 1, 7, 1, 12, 13, 2, 9, 9, 1, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 4, 1, 1, 1, 9, 7, 1, 1, 1, 4, 1, 1, 11, 1, 3, 5, 1, 1, 6, 4, 10, 8, 1, 9, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 5, 4, 2, 1, 4, 4, 2], "experience_level": [7, 5, 5, 6, 7, 7, 7, 7, 8, 7, 7, 5, 8, 8, 2, 6, 8, 9, 9, 7, 9, 9, 9, 10, 7, 7, 6, 10, 8, 6, 10, 8, 10, 5, 3, 5, 8, 5, 5, 8, 6, 7, 5, 9, 3, 1, 3, 4, 4, 5, 6, 7, 6, 7, 5, 6, 4, 7, 7, 5, 8, 8, 8, 8, 7, 7, 5, 9, 2, 8, 5, 6, 8, 9, 7, 10, 5, 4, 7, 8, 5, 10, 9, 9, 8, 10, 7, 7, 8, 7, 2, 9, 8, 5, 5, 8, 11, 7, 4, 8, 3, 8, 5, 8, 5, 10, 6, 10, 10, 7, 10, 10, 6, 10, 7, 5, 5, 6, 1, 3, 5, 1, 6, 4, 1, 6, 6, 5, 1, 5, 3, 4, 8, 7, 6, 8, 7, 2, 7, 9, 9, 5, 4, 7, 8, 7, 4, 9, 7, 8, 9, 6, 7, 9, 8, 9, 10, 7, 11, 11, 3, 4, 6, 5, 4, 6, 1, 6, 3, 6, 7, 6, 7, 7, 5, 6, 8, 7, 8, 6, 8, 8, 8], "milestone": [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 3, 1, 1, 3, 2, 4, 1, 3, 3, 4, 5, 1, 1, 1, 4, 3, 1, 4, 2, 5, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 1, 1, 1, 3, 1, 2, 1, 1, 2, 4, 1, 5, 1, 1, 1, 2, 1, 5, 3, 3, 4, 4, 1, 1, 2, 1, 1, 3, 3, 1, 1, 4, 4, 1, 1, 2, 1, 3, 1, 2, 1, 3, 1, 4, 5, 1, 4, 3, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 4, 3, 1, 1, 1, 2, 1, 1, 4, 1, 2, 3, 1, 1, 3, 2, 3, 4, 1, 4, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 2, 1, 2, 2, 2], "panic_num": [153, 32, 57, 64, 59, 169, 142, 148, 191, 71, 61, 89, 260, 183, 8, 65, 228, 199, 211, 185, 137, 198, 232, 365, 137, 129, 134, 551, 177, 78, 427, 181, 282, 33, 15, 136, 198, 28, 60, 222, 63, 172, 166, 270, 6, 62, 13, 13, 18, 56, 81, 77, 74, 143, 200, 81, 120, 170, 539, 249, 128, 181, 148, 192, 135, 117, 98, 225, 8, 205, 61, 152, 125, 226, 138, 332, 106, 16, 183, 867, 22, 318, 136, 155, 156, 192, 84, 254, 169, 114, 28, 202, 154, 144, 88, 356, 484, 185, 98, 1331, 10, 268, 41, 122, 59, 351, 37, 321, 347, 107, 301, 462, 80, 321, 259, 60, 144, 120, 3, 10, 36, 1, 72, 85, 1, 59, 115, 62, 4, 111, 136, 31, 147, 146, 200, 175, 67, 8, 88, 289, 216, 24, 27, 131, 209, 63, 20, 242, 147, 196, 175, 200, 76, 178, 189, 197, 561, 79, 427, 426, 21, 21, 50, 60, 72, 135, 8, 59, 6, 248, 179, 123, 122, 143, 226, 76, 135, 141, 152, 64, 311, 122, 61], "character": ["arc-dwa-mal-law", "ran-orc-fem-cha", "pri-elf-mal-cha", "ran-gno-mal-neu", "rog-hum-fem-cha", "mon-hum-mal-neu", "arc-gno-mal-neu", "mon-hum-fem-neu", "ran-hum-fem-neu", "cav-gno-fem-neu", "mon-hum-mal-law", "hea-hum-fem-neu", "val-hum-fem-neu", "tou-hum-mal-neu", "wiz-gno-mal-neu", "tou-hum-mal-neu", "wiz-elf-mal-cha", "hea-hum-mal-neu", "bar-hum-mal-cha", "arc-hum-mal-neu", "cav-dwa-mal-law", "val-dwa-fem-law", "cav-gno-mal-neu", "mon-hum-fem-neu", "wiz-orc-mal-cha", "hea-gno-mal-neu", "arc-gno-fem-neu", "bar-orc-fem-cha", "val-dwa-fem-law", "hea-gno-fem-neu", "kni-hum-mal-law", "kni-hum-mal-law", "kni-hum-fem-law", "val-dwa-fem-law", "sam-hum-mal-law", "wiz-gno-mal-neu", "pri-elf-mal-cha", "cav-hum-mal-neu", "rog-hum-mal-cha", "kni-hum-fem-law", "val-hum-fem-law", "cav-hum-fem-law", "arc-hum-fem-neu", "wiz-hum-fem-neu", "rog-hum-mal-cha", "val-dwa-fem-law", "cav-hum-fem-neu", "val-hum-fem-neu", "sam-hum-fem-law", "sam-hum-fem-law", "kni-hum-fem-law", "ran-elf-mal-cha", "tou-hum-fem-neu", "rog-hum-mal-cha", "hea-hum-mal-neu", "kni-hum-mal-law", "bar-orc-fem-cha", "bar-hum-mal-neu", "hea-gno-fem-neu", "kni-hum-mal-law", "ran-hum-fem-neu", "mon-hum-fem-neu", "val-hum-fem-law", "bar-hum-mal-neu", "arc-hum-mal-neu", "kni-hum-fem-law", "mon-hum-fem-cha", "cav-hum-fem-neu", "tou-hum-fem-neu", "arc-hum-fem-neu", "cav-dwa-mal-law", "arc-gno-mal-neu", "kni-hum-mal-law", "pri-elf-fem-cha", "pri-elf-mal-cha", "bar-orc-mal-cha", "arc-gno-mal-neu", "sam-hum-fem-law", "wiz-hum-fem-neu", "cav-hum-fem-law", "rog-hum-fem-cha", "val-dwa-fem-law", "hea-gno-fem-neu", "val-hum-fem-neu", "val-hum-fem-neu", "kni-hum-mal-law", "tou-hum-fem-neu", "rog-hum-mal-cha", "hea-gno-mal-neu", "pri-elf-fem-cha", "hea-gno-mal-neu", "cav-dwa-mal-law", "rog-hum-mal-cha", "hea-hum-mal-neu", "tou-hum-fem-neu", "val-hum-fem-neu", "mon-hum-mal-cha", "hea-gno-mal-neu", "wiz-elf-fem-cha", "bar-orc-mal-cha", "wiz-gno-mal-neu", "bar-orc-fem-cha", "rog-hum-fem-cha", "ran-hum-mal-neu", "tou-hum-mal-neu", "val-hum-fem-neu", "sam-hum-mal-law", "bar-orc-fem-cha", "val-dwa-fem-law", "wiz-elf-fem-cha", "wiz-gno-mal-neu", "mon-hum-fem-neu", "arc-hum-mal-neu", "mon-hum-fem-neu", "wiz-hum-mal-cha", "kni-hum-fem-law", "hea-hum-fem-neu", "wiz-elf-fem-cha", "tou-hum-mal-neu", "pri-hum-mal-neu", "val-dwa-fem-law", "tou-hum-fem-neu", "kni-hum-mal-law", "bar-orc-mal-cha", "ran-elf-mal-cha", "rog-hum-fem-cha", "tou-hum-fem-neu", "ran-orc-fem-cha", "sam-hum-fem-law", "mon-hum-fem-cha", "rog-orc-fem-cha", "val-dwa-fem-law", "kni-hum-mal-law", "cav-gno-mal-neu", "hea-hum-mal-neu", "cav-hum-fem-law", "hea-gno-fem-neu", "wiz-hum-fem-neu", "val-dwa-fem-law", "kni-hum-fem-law", "tou-hum-fem-neu", "val-hum-fem-law", "kni-hum-fem-law", "ran-orc-fem-cha", "sam-hum-mal-law", "ran-elf-mal-cha", "cav-hum-mal-law", "wiz-orc-mal-cha", "rog-orc-mal-cha", "arc-gno-mal-neu", "bar-orc-fem-cha", "kni-hum-mal-law", "sam-hum-fem-law", "pri-elf-fem-cha", "hea-gno-mal-neu", "val-dwa-fem-law", "val-dwa-fem-law", "sam-hum-mal-law", "bar-orc-fem-cha", "kni-hum-fem-law", "tou-hum-fem-neu", "rog-orc-fem-cha", "arc-gno-mal-neu", "wiz-orc-mal-cha", "bar-hum-fem-neu", "arc-hum-mal-law", "wiz-orc-fem-cha", "wiz-hum-fem-cha", "wiz-orc-mal-cha", "arc-gno-fem-neu", "hea-hum-mal-neu", "wiz-orc-mal-cha", "ran-hum-fem-neu", "ran-hum-fem-neu", "arc-gno-mal-neu", "kni-hum-fem-law", "ran-hum-fem-cha", "ran-elf-fem-cha", "wiz-gno-fem-neu", "arc-gno-fem-neu", "mon-hum-fem-neu", "val-hum-fem-law", "rog-hum-fem-cha"], "end_reason": ["DEATH: died. Killed by a little dog.", "DEATH: died. Killed by a wand, while praying.", "DEATH: died. Killed by a hobgoblin.", "DEATH: died. Killed by a manes, while fainted from lack of food.", "DEATH: died. Killed by a rothe, while praying.", "DEATH: died. Killed by an elf zombie, while fainted from lack of food.", "DEATH: died. Killed by a bolt of cold.", "DEATH: died. Killed by a gnome zombie, while fainted from lack of food.", "DEATH: died. Killed by a white unicorn.", "DEATH: died. Killed by a homunculus, while fainted from lack of food.", "DEATH: died. Killed by a wererat, while frozen by a monster's gaze.", "DEATH: died. Killed by a gas spore's explosion.", "DEATH: died. Killed by a burning scroll.", "DEATH: died. Killed by an orcish arrow.", "DEATH: died. Killed by a grid bug, while fainted from lack of food.", "exception: Traceback (most recent call last):\n  File \"main.py\", line 74, in single_simulation\n    pool.apply_async(env.main).get(timeout)\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 771, in get\n    raise self._value\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 125, in worker\n    result = (True, func(*args, **kwds))\n  File \"/workspaces/autoascend/autoascend/env_wrapper.py\", line 92, in main\n    self.agent.main()\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1565, in main\n    self.handle_exception(e)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1511, in handle_exception\n    raise exc\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1562, in main\n    self.global_logic.global_strategy().run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 257, in preempt\n    next(iterator)\n  File \"/workspaces/autoascend/autoascend/utils.py\", line 137, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1135, in fight2\n    self.character.parse_enhance_view()\n  File \"/workspaces/autoascend/autoascend/character.py\", line 359, in parse_enhance_view\n    self._parse_enhance_view()\n  File \"/workspaces/autoascend/autoascend/character.py\", line 399, in _parse_enhance_view\n    assert letter not in self.upgradable_skills.values()\nAssertionError\n", "DEATH: died. Killed by a dwarf king.", "DEATH: died. Killed by a goblin, while fainted from lack of food.", "DEATH: died. Killed by an Uruk-hai, while sleeping.", "DEATH: died. Killed by a little dog.", "DEATH: died. Killed by a mumak.", "DEATH: starved to death.", "DEATH: died. Killed by a black unicorn.", "exception: Traceback (most recent call last):\n  File \"main.py\", line 74, in single_simulation\n    pool.apply_async(env.main).get(timeout)\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 771, in get\n    raise self._value\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 125, in worker\n    result = (True, func(*args, **kwds))\n  File \"/workspaces/autoascend/autoascend/env_wrapper.py\", line 92, in main\n    self.agent.main()\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1565, in main\n    self.handle_exception(e)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1511, in handle_exception\n    raise exc\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1562, in main\n    self.global_logic.global_strategy().run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 244, in preempt\n    val = f.run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 257, in preempt\n    next(iterator)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 68, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/utils.py\", line 137, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/global_logic.py\", line 283, in solve_sokoban_strategy\n    sokomap.move(y, x, dy, dx)\n  File \"/workspaces/autoascend/autoascend/soko_solver/__init__.py\", line 24, in move\n    assert self.sokomap[boulder_y, boulder_x] == BOULDER\nAssertionError\n", "DEATH: died. Killed by a giant bat, while fainted from lack of food.", "DEATH: died. Killed by a hobgoblin, while sleeping.", "DEATH: died. Killed by a hobgoblin, while fainted from lack of food.", "exception: Traceback (most recent call last):\n  File \"main.py\", line 74, in single_simulation\n    pool.apply_async(env.main).get(timeout)\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 771, in get\n    raise self._value\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 125, in worker\n    result = (True, func(*args, **kwds))\n  File \"/workspaces/autoascend/autoascend/env_wrapper.py\", line 92, in main\n    self.agent.main()\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1565, in main\n    self.handle_exception(e)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1511, in handle_exception\n    raise exc\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1562, in main\n    self.global_logic.global_strategy().run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 244, in preempt\n    val = f.run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 165, in f\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/global_logic.py\", line 594, in current_strategy\n    (\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 68, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 257, in preempt\n    next(iterator)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/utils.py\", line 137, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 244, in preempt\n    val = f.run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 257, in preempt\n    next(iterator)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 190, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/utils.py\", line 137, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/exploration_logic.py\", line 516, in untrap_traps\n    self.agent.untrap(trap_y, trap_x)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 700, in untrap\n    assert self.single_message == \"In what direction?\", self.single_message\nAssertionError: Your hands seem to be too busy for that.\n", "DEATH: died. Killed by a spotted jelly.", "DEATH: died. Killed by a werejackal, while fainted from lack of food.", "DEATH: died. Killed by a bugbear.", "DEATH: was poisoned. Poisoned by a snake.", "exception: Traceback (most recent call last):\n  File \"main.py\", line 74, in single_simulation\n    pool.apply_async(env.main).get(timeout)\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 771, in get\n    raise self._value\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 125, in worker\n    result = (True, func(*args, **kwds))\n  File \"/workspaces/autoascend/autoascend/env_wrapper.py\", line 92, in main\n    self.agent.main()\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1565, in main\n    self.handle_exception(e)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1511, in handle_exception\n    raise exc\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1562, in main\n    self.global_logic.global_strategy().run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 257, in preempt\n    next(iterator)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 68, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/utils.py\", line 137, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/global_logic.py\", line 283, in solve_sokoban_strategy\n    sokomap.move(y, x, dy, dx)\n  File \"/workspaces/autoascend/autoascend/soko_solver/__init__.py\", line 24, in move\n    assert self.sokomap[boulder_y, boulder_x] == BOULDER\nAssertionError\n", "DEATH: died. Killed by a manes, while fainted from lack of food.", "DEATH: died. Killed by a gecko, while fainted from lack of food.", "DEATH: died. Killed by a manes, while fainted from lack of food.", "DEATH: died. Killed by a killer bee, while fainted from lack of food.", "DEATH: died. Killed by a hobgoblin, while fainted from lack of food.", "DEATH: died. Killed by a sewer rat, while fainted from lack of food.", "DEATH: died. Killed by an invisible hobgoblin, while fainted from lack of food.", "DEATH: starved to death.", "DEATH: starved to death.", "DEATH: died. Killed by a giant rat.", "DEATH: died. Killed by an orc-captain, while fainted from lack of food.", "DEATH: died. Killed by a bat, while fainted from lack of food.", "DEATH: died. Killed by an orcish dagger.", "DEATH: died. Killed by a fox, while fainted from lack of food.", "DEATH: died. Killed by a fox, while fainted from lack of food.", "exception: Traceback (most recent call last):\n  File \"main.py\", line 78, in single_simulation\n    pool.apply_async(env.main).get(timeout)\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 771, in get\n    raise self._value\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 125, in worker\n    result = (True, func(*args, **kwds))\n  File \"/workspaces/autoascend/autoascend/env_wrapper.py\", line 92, in main\n    self.agent.main()\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1565, in main\n    self.handle_exception(e)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1511, in handle_exception\n    raise exc\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1562, in main\n    self.global_logic.global_strategy().run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 244, in preempt\n    val = f.run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 244, in preempt\n    val = f.run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 165, in f\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/global_logic.py\", line 594, in current_strategy\n    (\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 68, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 111, in f\n    next(v2)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/utils.py\", line 137, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 257, in preempt\n    next(iterator)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 165, in f\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 111, in f\n    next(v2)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 190, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 165, in f\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 100, in f\n    next(v1)\n  File \"/workspaces/autoascend/autoascend/utils.py\", line 137, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/item/inventory.py\", line 1230, in check_items\n    self.agent.go_to(target_y, target_x, debug_tiles_args=dict(color=(255, 0, 255), is_path=True))\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1069, in go_to\n    self.move(y, x)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 877, in move\n    self.direction(dir)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 847, in direction\n    self.step(action)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 389, in step\n    self.update(observation, additional_action_iterator)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 410, in update\n    self.step(A.TextCharacters.SPACE)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 389, in step\n    self.update(observation, additional_action_iterator)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 466, in update\n    self.update_state(allow_update=self._atom_operation_allow_update or not self.in_atom_operation,\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 483, in update_state\n    func()\n  File \"/workspaces/autoascend/autoascend/item/inventory.py\", line 77, in update\n    self.get_items_below_me(assume_appropriate_message=assume_appropriate_message)\n  File \"/workspaces/autoascend/autoascend/item/inventory.py\", line 501, in get_items_below_me\n    items.append(self.item_manager.get_item_from_text(line, category,\n  File \"/workspaces/autoascend/autoascend/item/item_manager.py\", line 155, in get_item_from_text\n    self.parse_text(text, category, glyph)\n  File \"/workspaces/autoascend/autoascend/utils.py\", line 165, in f\n    ret = func(*args, **kwargs)\n  File \"/workspaces/autoascend/autoascend/item/item_manager.py\", line 475, in parse_text\n    assert category is None or category == O.get_category(objs[0]), (text, category, O.get_category(objs[0]))\nAssertionError: ('a heavy iron ball (chained to you)', 15, 17)\n", "DEATH: died. Killed by a jackal, while fainted from lack of food.", "DEATH: died. Killed by a kitten.", "DEATH: died. Killed by a rothe.", "DEATH: died. Killed by a werejackal.", "DEATH: died. Killed by a hill orc.", "DEATH: starved to death.", "DEATH: died. Killed by a werejackal, while fainted from lack of food.", "DEATH: starved to death.", "exception: Traceback (most recent call last):\n  File \"main.py\", line 78, in single_simulation\n    pool.apply_async(env.main).get(timeout)\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 771, in get\n    raise self._value\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 125, in worker\n    result = (True, func(*args, **kwds))\n  File \"/workspaces/autoascend/autoascend/env_wrapper.py\", line 92, in main\n    self.agent.main()\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1565, in main\n    self.handle_exception(e)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1511, in handle_exception\n    raise exc\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1562, in main\n    self.global_logic.global_strategy().run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 244, in preempt\n    val = f.run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 244, in preempt\n    val = f.run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 165, in f\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/global_logic.py\", line 594, in current_strategy\n    (\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 68, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 111, in f\n    next(v2)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/utils.py\", line 137, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 257, in preempt\n    next(iterator)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 165, in f\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 111, in f\n    next(v2)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 257, in preempt\n    next(iterator)\n  File \"/workspaces/autoascend/autoascend/utils.py\", line 137, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/item/inventory.py\", line 1273, in check_containers\n    self.check_container_content(item)\n  File \"/workspaces/autoascend/autoascend/item/inventory.py\", line 280, in check_container_content\n    assert item in self.items.all_items or item in self.items_below_me\nAssertionError\n", "DEATH: died. Killed by a bat, while fainted from lack of food.", "DEATH: starved to death.", "DEATH: died. Killed by Ms. Urignac; the shopkeeper.", "DEATH: died. Killed by a jackal, while fainted from lack of food.", "DEATH: died. Killed by Ms. Sipaliwini; the shopkeeper.", "DEATH: died. Killed by a white unicorn.", "DEATH: died. Killed by a giant bat, while fainted from lack of food.", "DEATH: died. Killed by a rock, while fainted from lack of food.", "DEATH: starved to death.", "DEATH: died. Killed by a leocrotta.", "DEATH: died. Killed by a fox.", "DEATH: died. Killed by a giant mimic.", "DEATH: died. Killed by a kitten, while fainted from lack of food.", "DEATH: died. Killed by a dwarf zombie.", "DEATH: died. Killed by a crocodile.", "DEATH: died. Killed by a gray unicorn.", "DEATH: died. Killed by a magic missile.", "exception: Traceback (most recent call last):\n  File \"main.py\", line 78, in single_simulation\n    pool.apply_async(env.main).get(timeout)\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 771, in get\n    raise self._value\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 125, in worker\n    result = (True, func(*args, **kwds))\n  File \"/workspaces/autoascend/autoascend/env_wrapper.py\", line 92, in main\n    self.agent.main()\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1565, in main\n    self.handle_exception(e)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1511, in handle_exception\n    raise exc\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1562, in main\n    self.global_logic.global_strategy().run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 257, in preempt\n    next(iterator)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 68, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/utils.py\", line 137, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/global_logic.py\", line 283, in solve_sokoban_strategy\n    sokomap.move(y, x, dy, dx)\n  File \"/workspaces/autoascend/autoascend/soko_solver/__init__.py\", line 24, in move\n    assert self.sokomap[boulder_y, boulder_x] == BOULDER\nAssertionError\n", "DEATH: starved to death.", "DEATH: died. Killed by a bat, while fainted from lack of food.", "DEATH: starved to death.", "DEATH: died. Killed by a black unicorn.", "DEATH: died. Killed by a jackal, while fainted from lack of food.", "exception: Traceback (most recent call last):\n  File \"main.py\", line 78, in single_simulation\n    pool.apply_async(env.main).get(timeout)\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 771, in get\n    raise self._value\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 125, in worker\n    result = (True, func(*args, **kwds))\n  File \"/workspaces/autoascend/autoascend/env_wrapper.py\", line 92, in main\n    self.agent.main()\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1565, in main\n    self.handle_exception(e)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1511, in handle_exception\n    raise exc\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1562, in main\n    self.global_logic.global_strategy().run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 257, in preempt\n    next(iterator)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 68, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/utils.py\", line 137, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/global_logic.py\", line 283, in solve_sokoban_strategy\n    sokomap.move(y, x, dy, dx)\n  File \"/workspaces/autoascend/autoascend/soko_solver/__init__.py\", line 24, in move\n    assert self.sokomap[boulder_y, boulder_x] == BOULDER\nAssertionError\n", "DEATH: died. Killed by a white unicorn.", "DEATH: died. Killed by a touch of death.", "DEATH: died. Killed by a watch captain.", "DEATH: died. Killed by a gnome king, while praying.", "DEATH: died. Killed by a giant bat.", "DEATH: died. Killed by Juiblex.", "DEATH: died. Killed by a soldier ant.", "DEATH: died. Killed by a hill orc, while fainted from lack of food.", "DEATH: died. Killed by a grid bug, while fainted from lack of food.", "DEATH: died. Killed by a hallucinogen-distorted giant spider.", "DEATH: died. Killed by a killer bee.", "DEATH: died. Killed by a hobbit, while fainted from lack of food.", "DEATH: died. Killed by a hobgoblin, while fainted from lack of food.", "DEATH: died. Killed by a gas cloud.", "DEATH: died. Killed by a leocrotta.", "DEATH: died. Killed by a kobold lord, while fainted from lack of food.", "DEATH: died. Killed by a gas spore's explosion.", "DEATH: died. Killed by a hill orc, while frozen by a monster's gaze.", "DEATH: died. Killed by a giant rat, while fainted from lack of food.", "DEATH: died. Killed by a fire ant, while fainted from lack of food.", "DEATH: died. Killed by an iguana, while fainted from lack of food.", "DEATH: died. Killed by Mr. Annootok; the shopkeeper.", "DEATH: died. Killed by a gecko, while fainted from lack of food.", "DEATH: died. Killed by a mumak.", "DEATH: died. Killed by a dwarf zombie, while fainted from lack of food.", "DEATH: died. Killed by a soldier ant.", "exception: Traceback (most recent call last):\n  File \"main.py\", line 78, in single_simulation\n    pool.apply_async(env.main).get(timeout)\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 771, in get\n    raise self._value\n  File \"/opt/conda/lib/python3.8/multiprocessing/pool.py\", line 125, in worker\n    result = (True, func(*args, **kwds))\n  File \"/workspaces/autoascend/autoascend/env_wrapper.py\", line 92, in main\n    self.agent.main()\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1565, in main\n    self.handle_exception(e)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1511, in handle_exception\n    raise exc\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 1562, in main\n    self.global_logic.global_strategy().run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 244, in preempt\n    val = f.run()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 48, in run\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 246, in preempt\n    val = f()\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 139, in f2\n    next(gen)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 144, in f\n    return agent.preempt(strategies, self, first_func=f2, continue_after_preemption=continue_after_preemption)\n  File \"/workspaces/autoascend/autoascend/agent.py\", line 257, in preempt\n    next(iterator)\n  File \"/workspaces/autoascend/autoascend/strategy.py\", line 68, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/utils.py\", line 137, in f\n    next(it)\n  File \"/workspaces/autoascend/autoascend/global_logic.py\", line 283, in solve_sokoban_strategy\n    sokomap.move(y, x, dy, dx)\n  File \"/workspaces/autoascend/autoascend/soko_solver/__init__.py\", line 24, in move\n    assert self.sokomap[boulder_y, boulder_x] == BOULDER\nAssertionError\n", "DEATH: died. Killed by a rothe.", "DEATH: died. Killed by a Green-elf, while fainted from lack of food.", "DEATH: died. Killed by a soldier.", "DEATH: died. Killed by a kitten, while fainted from lack of food.", "DEATH: died. Killed by a bolt of lightning, while praying.", "DEATH: died. Killed by an iguana, while fainted from lack of food.", "DEATH: died. Killed by a jackal, while fainted from lack of food.", "DEATH: died. Killed by a giant bat, while fainted from lack of food.", "DEATH: died. Killed by a hobgoblin, while fainted from lack of food.", "DEATH: died. Killed by a djinni.", "DEATH: died. Killed by a newt, while fainted from lack of food.", "DEATH: died. Killed by a fox, while fainted from lack of food.", "DEATH: died. Killed by a sewer rat.", "DEATH: died. Killed by a giant bat, while fainted from lack of food.", "DEATH: died. Killed by a coyote, while fainted from lack of food.", "DEATH: died. Killed by a bolt of fire.", "DEATH: died. Killed by a gnome zombie, while fainted from lack of food.", "DEATH: died. Killed by a jackal, while fainted from lack of food.", "DEATH: died. Killed by a hobbit, while fainted from lack of food.", "DEATH: died. Killed by a kobold, while fainted from lack of food.", "DEATH: died. Killed by a hobbit, while fainted from lack of food.", "DEATH: starved to death.", "DEATH: died. Killed by a gecko, while fainted from lack of food.", "DEATH: died. Killed by a water moccasin, while praying.", "DEATH: died. Killed by a hill orc, while fainted from lack of food.", "DEATH: died. Killed by a wererat.", "DEATH: died. Killed by a jaguar.", "DEATH: died. Killed by a sewer rat, while fainted from lack of food.", "DEATH: died. Killed by a jackal, while fainted from lack of food.", "DEATH: died. Killed by a grid bug, while fainted from lack of food.", "DEATH: died. Killed by a watchman.", "DEATH: died. Killed by a jaguar.", "DEATH: died. Killed by a gecko, while fainted from lack of food.", "DEATH: died. Killed by a warhorse.", "DEATH: starved to death.", "DEATH: died. Killed by Mr. Akalapi; the shopkeeper.", "DEATH: was poisoned. Poisoned by a rotted hill orc corpse.", "DEATH: died. Killed by a jackal, while fainted from lack of food.", "DEATH: died. Killed by a leocrotta.", "DEATH: died. Killed by a giant rat, while fainted from lack of food.", "DEATH: died. Killed by a giant mimic.", "DEATH: died. Killed by a jaguar, while fainted from lack of food.", "DEATH: died. Killed by a hobgoblin, while fainted from lack of food.", "DEATH: died. Killed by an iguana, while fainted from lack of food.", "DEATH: died. Killed by a gnome, while frozen by a monster's gaze.", "DEATH: died. Killed by a giant mimic.", "DEATH: died. Killed by a spotted jelly.", "DEATH: died. Killed by a bat, while fainted from lack of food.", "DEATH: died. Killed by a kobold zombie, while fainted from lack of food.", "DEATH: died. Killed by a death ray.", "DEATH: died. Killed by a mountain centaur, while fainted from lack of food.", "DEATH: died. Killed by a hobbit.", "DEATH: died. Killed by a bat, while fainted from lack of food.", "DEATH: died. Killed by a werejackal.", "DEATH: died. Killed by a gnome, while fainted from lack of food.", "DEATH: died. Killed by a coyote, while fainted from lack of food.", "DEATH: died. Killed by a werejackal.", "DEATH: starved to death.", "DEATH: died. Killed by a hobgoblin, while fainted from lack of food.", "DEATH: died. Killed by a gas spore's explosion.", "DEATH: died. Killed by a wererat.", "DEATH: died. Killed by a rothe.", "DEATH: died. Killed by a newt, while fainted from lack of food.", "DEATH: died. Killed by a straw golem, while fainted from lack of food.", "DEATH: died. Killed by a rothe.", "DEATH: died. Killed by an invisible homunculus, while sleeping.", "DEATH: died. Killed by a coyote, while fainted from lack of food.", "DEATH: died. Killed by a jaguar.", "DEATH: died. Killed by a hill orc, while fainted from lack of food.", "DEATH: died. Killed by a Mordor orc.", "DEATH: died. Killed by a manes, while fainted from lack of food.", "DEATH: died. Killed by a little dog, while being frightened to death.", "DEATH: died. Killed by a jaguar.", "DEATH: was poisoned. Poisoned by a killer bee."], "seed": [[193248337, 193248337, false], [125205796, 125205796, false], [125205806, 125205806, false], [125205793, 125205793, false], [125205787, 125205787, false], [125205798, 125205798, false], [125205802, 125205802, false], [125205799, 125205799, false], [125205804, 125205804, false], [125205808, 125205808, false], [125205807, 125205807, false], [125205810, 125205810, false], [125205803, 125205803, false], [125205789, 125205789, false], [125205819, 125205819, false], [125205815, 125205815, false], [125205801, 125205801, false], [125205797, 125205797, false], [125205790, 125205790, false], [125205812, 125205812, false], [125205792, 125205792, false], [125205788, 125205788, false], [125205795, 125205795, false], [125205805, 125205805, false], [125205811, 125205811, false], [125205813, 125205813, false], [125205821, 125205821, false], [125205794, 125205794, false], [125205814, 125205814, false], [125205824, 125205824, false], [125205791, 125205791, false], [125205818, 125205818, false], [125205800, 125205800, false], [125205833, 125205833, false], [125205839, 125205839, false], [125205830, 125205830, false], [125205817, 125205817, false], [125205835, 125205835, false], [125205832, 125205832, false], [125205822, 125205822, false], [125205831, 125205831, false], [125205826, 125205826, false], [125205834, 125205834, false], [125205816, 125205816, false], [125205848, 125205848, false], [33916436, 33916436, false], [33916432, 33916432, false], [33916442, 33916442, false], [33916427, 33916427, false], [33916440, 33916440, false], [33916422, 33916422, false], [33916423, 33916423, false], [33916433, 33916433, false], [33916421, 33916421, false], [33916445, 33916445, false], [33916443, 33916443, false], [33916449, 33916449, false], [33916426, 33916426, false], [33916431, 33916431, false], [33916448, 33916448, false], [33916428, 33916428, false], [33916441, 33916441, false], [33916446, 33916446, false], [33916435, 33916435, false], [33916438, 33916438, false], [33916447, 33916447, false], [33916452, 33916452, false], [33916429, 33916429, false], [33916462, 33916462, false], [33916437, 33916437, false], [33916460, 33916460, false], [33916457, 33916457, false], [33916450, 33916450, false], [33916430, 33916430, false], [33916458, 33916458, false], [33916424, 33916424, false], [33916455, 33916455, false], [33916468, 33916468, false], [33916453, 33916453, false], [33916439, 33916439, false], [33916470, 33916470, false], [33916444, 33916444, false], [33916454, 33916454, false], [33916456, 33916456, false], [33916465, 33916465, false], [33916451, 33916451, false], [33916473, 33916473, false], [33916469, 33916469, false], [33916464, 33916464, false], [33916475, 33916475, false], [33916482, 33916482, false], [33916463, 33916463, false], [33916474, 33916474, false], [33916483, 33916483, false], [33916484, 33916484, false], [33916425, 33916425, false], [33916434, 33916434, false], [33916479, 33916479, false], [33916486, 33916486, false], [33916459, 33916459, false], [33916493, 33916493, false], [33916466, 33916466, false], [33916487, 33916487, false], [33916481, 33916481, false], [33916488, 33916488, false], [33916461, 33916461, false], [33916496, 33916496, false], [33916476, 33916476, false], [33916471, 33916471, false], [33916490, 33916490, false], [33916472, 33916472, false], [33916467, 33916467, false], [33916491, 33916491, false], [33916478, 33916478, false], [33916494, 33916494, false], [33916505, 33916505, false], [33916507, 33916507, false], [33916504, 33916504, false], [407137183, 407137183, false], [407137169, 407137169, false], [407137170, 407137170, false], [407137191, 407137191, false], [407137188, 407137188, false], [407137171, 407137171, false], [407137194, 407137194, false], [407137177, 407137177, false], [407137178, 407137178, false], [407137190, 407137190, false], [407137197, 407137197, false], [407137182, 407137182, false], [407137175, 407137175, false], [407137195, 407137195, false], [407137174, 407137174, false], [407137189, 407137189, false], [407137179, 407137179, false], [407137186, 407137186, false], [407137198, 407137198, false], [407137207, 407137207, false], [407137193, 407137193, false], [407137184, 407137184, false], [407137176, 407137176, false], [407137208, 407137208, false], [407137209, 407137209, false], [407137200, 407137200, false], [407137172, 407137172, false], [407137206, 407137206, false], [407137211, 407137211, false], [407137180, 407137180, false], [407137201, 407137201, false], [407137196, 407137196, false], [407137192, 407137192, false], [407137217, 407137217, false], [407137214, 407137214, false], [407137205, 407137205, false], [407137199, 407137199, false], [407137202, 407137202, false], [407137173, 407137173, false], [407137210, 407137210, false], [407137203, 407137203, false], [407137181, 407137181, false], [245606520, 245606520, false], [245606539, 245606539, false], [245606537, 245606537, false], [245606540, 245606540, false], [245606526, 245606526, false], [245606535, 245606535, false], [245606545, 245606545, false], [245606541, 245606541, false], [245606546, 245606546, false], [245606538, 245606538, false], [245606534, 245606534, false], [245606528, 245606528, false], [245606532, 245606532, false], [245606527, 245606527, false], [245606543, 245606543, false], [245606547, 245606547, false], [245606536, 245606536, false], [245606525, 245606525, false], [245606533, 245606533, false], [245606551, 245606551, false], [245606521, 245606521, false], [245606542, 245606542, false], [245606552, 245606552, false]], "agent_panic": [153, 32, 57, 64, 59, 169, 142, 148, 191, 71, 61, 89, 260, 183, 8, 65, 228, 199, 211, 185, 137, 198, 232, 365, 137, 129, 134, 551, 177, 78, 427, 181, 282, 33, 15, 136, 198, 28, 60, 222, 63, 172, 166, 270, 6, 62, 13, 13, 18, 56, 81, 77, 74, 143, 200, 81, 120, 170, 539, 249, 128, 181, 148, 192, 135, 117, 98, 225, 8, 205, 61, 152, 125, 226, 138, 332, 106, 16, 183, 867, 22, 318, 136, 155, 156, 192, 84, 254, 169, 114, 28, 202, 154, 144, 88, 356, 484, 185, 98, 1331, 10, 268, 41, 122, 59, 351, 37, 321, 347, 107, 301, 462, 80, 321, 259, 60, 144, 120, 3, 10, 36, 1, 72, 85, 1, 59, 115, 62, 4, 111, 136, 31, 147, 146, 200, 175, 67, 8, 88, 289, 216, 24, 27, 131, 209, 63, 20, 242, 147, 196, 175, 200, 76, 178, 189, 197, 561, 79, 427, 426, 21, 21, 50, 60, 72, 135, 8, 59, 6, 248, 179, 123, 122, 143, 226, 76, 135, 141, 152, 64, 311, 122, 61], "elbereth_write": [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 5, 0, 0, 6, 0, 0, 4, 2, 3, 0, 4, 0, 0, 0, 0, 1, 5, 2, 0, 0, 0, 0, 0, 1, 1, 0, 11, 0, 0, 2, 0, 0, 4, 0, 0, 0, 0, 17, 0, 1, 4, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 3, 0, 0, 0, 2, 1, 1, 1, 1, 0, 0, 0, 1, 2, 0, 5, 0, 0, 3, 10, 0, 3, 0, 0, 1, 31, 0, 2, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 7, 0, 0, 4, 2, 7, 0, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0, 6, 0, 0, 0, 0, 3, 0, 2, 0, 0, 1, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 2, 0, 0, 0, 1, 36, 1, 2, 3, 7, 0, 11, 0, 11, 0, 3, 1, 0], "container_untrap_success": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "container_untrap_fail": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "untrap_success": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 2, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "triggered_undetected_trap": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], "allow_walk_traps": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 902, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 495, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95, 739, 143, 0, 0, 0, 0, 0, 4, 0, 0, 0, 3624, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 2194, 0, 0, 0, 943, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 1561, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "allow_attack_all": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 842, 0, 0, 0, 0, 0, 0, 0, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66, 0, 0, 0, 0, 0, 0, 435, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 679, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3426, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2130, 0, 0, 0, 889, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1501, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "sokoban_dropped": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "wait_in_fight": [7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 11, 0, 0, 93, 0, 0, 0, 143, 101, 0, 23, 0, 0, 0, 0, 1, 57, 73, 0, 0, 0, 0, 0, 1, 0, 0, 35, 0, 0, 11, 0, 0, 1, 0, 0, 0, 0, 192, 0, 7, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 7, 13, 0, 27, 3, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 41, 0, 8, 0, 0, 0, 14, 0, 67, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 3, 0, 0, 37, 3, 127, 0, 0, 0, 0, 0, 0, 0, 9, 0, 88, 0, 0, 0, 0, 65, 0, 0, 0, 0, 74, 0, 2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 37, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 6, 0, 0, 0, 11, 183, 2, 1, 34, 33, 0, 68, 0, 301, 0, 12, 0, 0], "melee_gas_spore": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 5, 0], "ad_aerarium_below_me": [0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 14, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0], "drop_gold": [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], "cast_force bolt": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_drain life": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_magic missile": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_cone of cold": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fireball": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_finger of death": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_protection": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_create monster": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_remove curse": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_create familiar": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_turn undead": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_detect monsters": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_light": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_detect food": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_clairvoyance": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_detect unseen": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_identify": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_detect treasure": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_magic mapping": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_sleep": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_confuse monster": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_slow monster": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_cause fear": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_charm monster": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_jumping": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_haste self": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_invisibility": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_levitation": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_teleport away": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_healing": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_cure blindness": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_cure sickness": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_extra healing": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_stone to flesh": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_restore ability": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_knock": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_wizard lock": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_dig": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_polymorph": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_cancellation": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_force bolt": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_drain life": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_magic missile": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_cone of cold": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_fireball": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_finger of death": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_protection": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_create monster": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_remove curse": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_create familiar": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_turn undead": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_detect monsters": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_light": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_detect food": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_clairvoyance": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_detect unseen": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_identify": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_detect treasure": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_magic mapping": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_sleep": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_confuse monster": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_slow monster": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_cause fear": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_charm monster": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_jumping": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_haste self": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_invisibility": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_levitation": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_teleport away": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_healing": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_cure blindness": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_cure sickness": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_extra healing": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_stone to flesh": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_restore ability": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_knock": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_wizard lock": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_dig": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_polymorph": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "cast_fail_cancellation": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "search_diff": [20.0, 15.0, 48.0, 15.0, 20.0, 35.0, 30.0, 17.0, 19.0, 20.0, 2014.0, 61.0, 75.0, 15.0, 15.0, 15.0, 124.0, 35.0, 1041.0, 15.0, 383.2, 99.0, 410.0, 120.0, 77.0, 18.0, 16.0, 330.0, 84.0, 44.0, 205.0, 718.0, 115.0, 15.0, 15.0, 16.0, 365.0, 15.0, 1229.0, 180.0, 75.0, 51.0, 24.0, 15.0, 15.0, 4.0, 15.0, 15.0, 15.0, 15.0, 525.0, 20.0, 15.0, 30.0, 20.0, 20.0, 15.0, 15.0, 793.0, 330.0, 109.0, 19.0, 40.0, 15.0, 19.0, 15.0, 15.0, 308.0, 15.0, 15.0, 19.0, 18.0, 20.0, 470.0, 1559.0, 501.0, 18.0, 15.0, 20.0, 70.0, 15.0, 410.0, 41.0, 261.0, 18.0, 2070.0, 837.0, 55.0, 152.0, 25.0, 15.0, 88.0, 15.0, 16.0, 67.0, 20.0, 265.0, 41.0, 16.0, 30.0, 15.0, 401.0, 15.0, 18.0, 3935.0, 186.0, 20.0, 60.0, 1895.0, 15.0, 119.0, 461.0, 41.0, 15.0, 35.0, 26.0, 75.0, 20.0, 5.0, 21.0, 15.0, 15.0, 532.0, 15.0, 15.0, 15.0, 15.0, 22.0, 19.0, 15.0, 15.0, 15.0, 76.0, 15.0, 37.0, 29.0, 100.0, 15.0, 15.0, 120.0, 181.0, 15.0, 15.0, 17.0, 15.0, 15.0, 20.0, 410.0, 15.0, 24.0, 18.0, 33.0, 17.0, 15.0, 36.0, 405.0, 105.0, 15.0, 50.0, 3030.2, 15.0, 15.0, 47.0, 20.0, 15.0, 16.0, 15.0, 15.0, 20.0, 25.0, 405.0, 28.0, 406.0, 30.0, 20.0, 26.0, 35.0, 20.0, 25.0, 15.0, 65.0, 70.0, 15.0], "max_turns_on_position": [456, 45, 83, 94, 905, 103, 97, 155, 183, 69, 1956, 127, 173, 188, 43, 67, 194, 339, 976, 208, 401, 589, 400, 190, 358, 163, 649, 281, 156, 288, 257, 913, 151, 303, 42, 136, 508, 92, 1528, 235, 272, 548, 58, 143, 38, 63, 20, 74, 199, 79, 605, 108, 93, 143, 1816, 727, 1167, 142, 1685, 961, 938, 611, 98, 153, 156, 110, 431, 253, 38, 196, 68, 202, 120, 561, 2009, 521, 175, 127, 187, 727, 66, 332, 92, 415, 156, 1909, 1145, 138, 221, 145, 346, 237, 177, 332, 162, 1746, 373, 207, 55, 1546, 33, 604, 101, 93, 5040, 434, 607, 176, 1793, 135, 238, 431, 91, 134, 200, 107, 261, 106, 14, 109, 83, 15, 695, 128, 17, 143, 92, 129, 23, 143, 253, 404, 94, 145, 128, 98, 162, 37, 139, 212, 319, 56, 30, 225, 127, 65, 49, 412, 163, 80, 238, 87, 94, 116, 290, 790, 189, 170, 197, 2851, 34, 197, 70, 63, 104, 101, 129, 82, 31, 248, 501, 151, 546, 101, 206, 85, 110, 154, 166, 59, 341, 358, 107], "gold_mean": [1.7055431881973921, 3.7537086221416076, 3.356318755030856, 5.916429516213075, 3.8973422193672715, 2.323767476085357, 6.029892170651665, 7.401060697805525, 10.87580075230822, 8.28581901489118, 5.470358061749571, 780.1943151281178, 12.421879637005452, 364.8768031254174, 3.4346229878565375, 63.829852088746755, 10.577348935468889, 901.8993824093136, 142.80135341885372, 7.888733632327421, 50.15643106778258, 105.64578105892477, 58.535901500739804, 25.11845438123783, 13.17049885436347, 968.1280653950954, 3.487217194570136, 149.19405556585698, 27.196945054945054, 625.3649319801339, 33.137859032956456, 9.9157700797803, 93.20090821404489, 5.4739670046919935, 3.028481012658228, 3.429013575215273, 53.77529967541858, 7.16367239946295, 3.45372889568037, 8.430469456283094, 7.892953183217236, 12.532652878502999, 7.107167563990736, 29.494553584818203, 3.636825396825397, 1.8329649510577835, 1.2625, 1.8513274336283185, 4.677214022140221, 3.896690970274818, 5.061935704514364, 3.413720869337523, 369.88614788505004, 3.911958348254869, 840.5938291966692, 8.848628727007105, 6.780634573304158, 8.743301731244847, 500.65186293816464, 5.445498058340107, 8.665376937674052, 5.0151260775514155, 5.297304322961345, 27.68973210803052, 7.688881836454036, 6.122369007672995, 10.185433315786955, 41.73716898619678, 116.15467820443483, 11.112389936094521, 6.789342214820983, 1.4744651200918109, 4.285290070254219, 32.668673261312854, 6.45920607899736, 93.18163452708907, 2.4437388370708475, 9.378148341149904, 5.279515323183445, 132.63986316168527, 3.3274079926262425, 194.79308842618113, 369.82934330253227, 69.5145788813733, 31.62710473300669, 97.13794791364894, 67.00223953569063, 8.177687902783815, 577.8033761589954, 2.6550484165104153, 775.254145148138, 27.64798242200911, 39.21852225990331, 735.0643894456944, 309.3570933356443, 298.839839794108, 300.0378077961267, 777.9726498049188, 1.4829545454545454, 20.290784471515387, 5.849288735101884, 51.24465497976545, 4.346876799832452, 8.320278503046127, 108.281982421875, 141.62953267001913, 4.919522546419098, 77.77145570327338, 55.50403486259075, 8.237763182788724, 24.2315927067332, 72.72995247601717, 2.4680326777072326, 44.914390128811384, 2.481041456016178, 8.16661499348918, 546.4666522887799, 2.4431581577413177, 71.9938524590164, 6.411787439613526, 2.3743370402053037, 53.12835820895523, 3.9149017508983865, 4.314694972772473, 0.7605633802816901, 4.41650271959264, 180.3381107885825, 3.4850157449669177, 1.256556738509478, 7.932556648140231, 0.0, 3.767273465520742, 15.8584778012685, 4.448757839467159, 495.79331837447023, 18.54760089942452, 615.6752076451913, 2.514336917562724, 7.7763852242744065, 41.3781702680591, 424.3913942545815, 4.804833787016415, 1.8914663587698122, 5.089188715612406, 13.839405962725976, 6.73328738800827, 1.3480159720489144, 69.5946875413345, 14.845799846600194, 7.853544957119019, 85.46920564563163, 11.720170243161999, 3.4598328228688104, 45.051598848517855, 819.3577179974263, 122.11515775262, 118.42052907491319, 9.231626160045217, 96.4786875992976, 115.72643941564021, 481.7524529844644, 7.111297304845692, 2.4913000034455433, 16.403844350679794, 7.255593735016781, 5.593495453333729, 10.861528689392335, 44.582593783494104, 4.584442169907882, 2.469640869545465, 684.4260836175547, 3.411697775851326, 3.630801920635797, 3.3978526136303087, 7.623577324460928, 2.729483282674772, 43.46623741724857, 36.35510538228165, 11.218433661468769, 7.284694780300796, 8.186613237962225, 8.727655073412748, 5.205597233047545], "gold_median": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "gold_std": [1.8135253474236268, 3.9069437388903947, 3.4970495706872837, 5.989237597083671, 20.08911464106331, 2.7954878224508897, 6.100893161084089, 7.479944058070558, 28.488493125604563, 8.420079260496335, 5.487463661224144, 780.4601733248484, 22.778911854643308, 410.8481417399391, 3.496725188470643, 63.86686540312008, 17.39016785435944, 968.2636568212163, 262.07145203109707, 7.951076541748511, 89.65496586364098, 196.65710563935073, 122.92572244516712, 56.97369881975872, 21.334610093850397, 978.0317722601827, 3.4914011297406264, 283.87798049027583, 56.34824922450839, 625.4999854169702, 60.54798591966878, 20.60788925061702, 159.02841681526596, 5.950635335299908, 3.4374549608229774, 3.4825840708222575, 181.38073565392824, 7.3673205335687255, 3.480964621564235, 50.24187694239498, 7.963716352360277, 23.97611986348187, 7.257885921598448, 58.71814827913833, 3.8724311814708874, 2.221449989658773, 1.481078576578569, 1.994466461991391, 4.8505674703536314, 3.93978587925573, 5.388259373035552, 3.4811549305957166, 370.01427223594567, 3.975818129682135, 840.8988541407733, 8.932836468922817, 6.926980614151202, 19.84977267706238, 542.7624880246702, 5.486456905435024, 18.614458827333678, 11.119311403541934, 19.243508888475965, 78.43279941477616, 9.729070805209737, 15.389279495871333, 10.320208182852847, 78.57213100720988, 116.52056262922811, 29.747825758870786, 6.915809026431269, 1.499782640887697, 10.168876215499415, 51.97561874415996, 8.833852644158846, 172.2897080533055, 2.4992080492129025, 9.682054900033009, 7.09343442744249, 221.01979771515545, 3.49574198118092, 495.1409594141865, 463.50843258171574, 128.0659603430848, 72.07457321271083, 206.88379595462075, 104.2712943146922, 25.201718042613635, 648.2921108827189, 2.81826212374554, 775.8867776660954, 50.88898541750842, 81.76863137853663, 735.335587531075, 309.4912701012847, 483.1052468603279, 505.79380298493624, 820.9860181838496, 1.499903147699657, 24.00044824432894, 6.225788820509857, 80.17808949552968, 4.437504561742927, 11.671715546702265, 108.3268283294298, 249.52010253638403, 5.334472823301479, 134.61543705671633, 116.44284851236345, 9.175816618628154, 48.60104381488016, 122.46954184861671, 2.4997956097060072, 93.31085384005655, 2.499928113688474, 8.963874451009815, 546.7341839200661, 2.499353717457503, 73.48456654008915, 7.502418044551007, 2.496428605779076, 53.93864620122515, 3.9735274095026845, 4.400099490521014, 0.9709119965979767, 4.461124581578879, 180.3939685551066, 3.499967924438895, 1.4801132991885644, 7.963710601064904, 0.0, 3.9255838629881934, 37.39805046597252, 4.493599581605536, 550.8908380125771, 38.491017846210916, 615.8533574930893, 3.078828532704993, 12.31147131711071, 67.12526398759401, 435.6217677465835, 4.8883621856957395, 1.997052940890981, 5.340537915821354, 23.254217993653864, 6.911536696807667, 1.4922804211165417, 130.63571909017986, 27.820126078606037, 11.749597149666869, 166.28507145196807, 11.89701415568613, 3.481453035004355, 149.69143920967383, 862.0111195797581, 251.12399002356062, 189.93599796213402, 17.56851485757758, 178.25732962165478, 193.9569145696007, 482.7398935538749, 7.331120535962478, 2.499709201644063, 17.163196274729735, 7.4222246345913305, 5.82941539202082, 11.882937375483907, 48.57260645550201, 5.273995562418306, 2.4886959073789177, 731.8865662102215, 3.4840427087371477, 3.9708062467104996, 3.989274888965522, 7.862540539959834, 16.181356562072608, 78.16472584014623, 91.00005903645513, 22.503557809209045, 7.413926728977135, 13.012512435590645, 21.892529971689175, 9.220706224014473], "gold_min": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "gold_max": [5, 8, 7, 12, 480, 13, 15, 15, 228, 17, 11, 1561, 108, 1199, 7, 128, 169, 2181, 900, 16, 393, 528, 433, 314, 118, 2007, 7, 886, 230, 1251, 1216, 90, 600, 13, 7, 7, 903, 15, 7, 1265, 16, 158, 15, 233, 8, 9, 3, 4, 10, 8, 12, 7, 741, 8, 1682, 18, 14, 491, 1137, 11, 479, 43, 117, 314, 58, 79, 21, 307, 235, 340, 14, 3, 52, 160, 66, 703, 5, 20, 51, 539, 7, 2421, 1037, 356, 315, 809, 651, 119, 1452, 11, 1552, 168, 406, 1471, 619, 1307, 1579, 1697, 3, 55, 13, 236, 9, 53, 217, 817, 11, 461, 508, 28, 236, 933, 5, 412, 5, 19, 1094, 5, 147, 16, 5, 111, 8, 9, 2, 9, 361, 7, 3, 16, 0, 8, 154, 9, 1114, 174, 1232, 8, 44, 389, 1392, 10, 4, 20, 93, 14, 3, 632, 106, 68, 713, 24, 7, 613, 1820, 1015, 503, 61, 586, 565, 967, 15, 5, 35, 15, 12, 26, 98, 12, 5, 1504, 7, 17, 31, 16, 455, 247, 376, 95, 15, 63, 290, 41], "gold_first": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1559, 0, 843, 0, 123, 0, 1887, 0, 0, 0, 0, 0, 0, 0, 1948, 5, 0, 0, 1251, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 721, 0, 1668, 3, 0, 0, 1111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 217, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1011, 0, 0, 0, 227, 0, 1288, 0, 1549, 0, 0, 1465, 612, 0, 0, 1666, 0, 0, 0, 0, 0, 0, 197, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1079, 0, 147, 0, 0, 107, 0, 0, 0, 0, 354, 0, 0, 0, 0, 0, 0, 0, 1098, 0, 1228, 0, 0, 0, 726, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1798, 0, 0, 0, 0, 0, 957, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1478, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0], "gold_last": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "duration": [32.65403699874878, 14.396543025970459, 16.302465438842773, 22.739415407180786, 40.039382457733154, 45.52890181541443, 46.017261028289795, 50.90027856826782, 56.25267195701599, 42.25833034515381, 49.4433536529541, 30.37428069114685, 69.78336381912231, 70.01491689682007, 4.285353183746338, 21.074219703674316, 80.14171743392944, 83.80871272087097, 90.92207884788513, 46.720593214035034, 92.69790434837341, 102.18312287330627, 106.19009137153625, 107.4815673828125, 64.70442175865173, 70.04627680778503, 44.38522720336914, 126.6967716217041, 71.85748815536499, 40.39005374908447, 134.08107256889343, 67.87525129318237, 139.1517961025238, 13.603148698806763, 6.132162570953369, 37.58914041519165, 79.68423748016357, 18.93444514274597, 26.795364141464233, 73.49503874778748, 33.807432413101196, 63.01759338378906, 28.074153900146484, 92.11223912239075, 3.0733752250671387, 2.700340747833252, 5.015828609466553, 7.538728475570679, 13.342558860778809, 21.943167448043823, 33.16226243972778, 36.450371980667114, 37.90637540817261, 45.40411067008972, 27.94099497795105, 43.867605209350586, 20.723936796188354, 63.813191175460815, 67.08683252334595, 33.322234869003296, 72.18422865867615, 72.51936626434326, 48.62316632270813, 84.57792925834656, 84.89646601676941, 56.203550815582275, 27.40800929069519, 93.8448498249054, 5.147987127304077, 100.58935880661011, 21.661020755767822, 38.25303268432617, 69.22954750061035, 120.22091460227966, 40.12222743034363, 120.9836437702179, 57.938990354537964, 13.31434965133667, 66.25975608825684, 138.37084865570068, 16.28581213951111, 132.07120561599731, 84.15296864509583, 88.44921827316284, 61.133906841278076, 115.25337791442871, 41.80734181404114, 54.363450050354004, 77.57324147224426, 46.239768981933594, 14.126313924789429, 111.61581325531006, 72.69894981384277, 36.55057883262634, 35.09202814102173, 213.4623417854309, 216.75548768043518, 65.42815899848938, 38.6252760887146, 145.9912028312683, 7.462176322937012, 128.04706835746765, 29.058852672576904, 64.90840244293213, 36.9230523109436, 154.7749044895172, 23.45434308052063, 119.00499129295349, 133.88595867156982, 47.261085748672485, 134.57691931724548, 151.91382837295532, 48.95800304412842, 119.50238847732544, 49.83632016181946, 16.80563974380493, 23.830386877059937, 32.3447585105896, 0.6493041515350342, 4.878247261047363, 13.24430513381958, 1.5022828578948975, 23.87946128845215, 27.090531826019287, 0.9125926494598389, 30.061858654022217, 37.24118089675903, 33.44893288612366, 6.6859071254730225, 45.24055290222168, 46.945048809051514, 18.79909038543701, 53.71128845214844, 59.71684956550598, 61.79568147659302, 72.37463045120239, 38.169718980789185, 2.9630165100097656, 59.962581157684326, 87.38498020172119, 92.52945947647095, 13.932668447494507, 12.353269577026367, 51.76360750198364, 100.06120777130127, 31.5470073223114, 11.080909490585327, 104.11559700965881, 74.35115718841553, 101.24907302856445, 118.62458562850952, 31.45364212989807, 40.05409526824951, 80.48566150665283, 98.65001678466797, 97.95268821716309, 149.70876836776733, 63.759374380111694, 102.59839916229248, 158.0018970966339, 4.741121292114258, 14.9320387840271, 27.81064009666443, 24.388648748397827, 30.053017377853394, 31.80266284942627, 4.645977735519409, 27.126800775527954, 5.527233600616455, 42.6583034992218, 43.158376932144165, 45.309563636779785, 45.71005606651306, 49.923773527145386, 25.35009527206421, 28.59941864013672, 71.7957615852356, 80.45275521278381, 80.91084122657776, 35.979286193847656, 89.0488715171814, 66.38332533836365, 52.038464069366455]}